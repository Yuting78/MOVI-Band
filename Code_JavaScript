//  Group 1
let index2 = 0
let index = 0
let C1 = ""
let C2 = ""
let Custom2 = 0
let Custom = 0
keyboard.startKeyboardService()
mouse.startMouseService()
bluetooth.startAccelerometerService()
media.startMediaService()
bluetooth.startUartService()
grove.initGesture()
let List = [keyboard.keys(keyboard._Key.up), keyboard.keys(keyboard._Key.down), keyboard.keys(keyboard._Key.escape), keyboard.keys(keyboard._Key.tab)]
let List_length = List.length
grove.onGesture(GroveGesture.Down, function on_gesture_down() {
    media.sendCode(media.keys(media._MediaKey.vol_down))
})
grove.onGesture(GroveGesture.Right, function on_gesture_right() {
    if (pins.digitalReadPin(DigitalPin.P1) == 1) {
        keyboard.sendString(keyboard.keys(keyboard._Key.right))
    } else {
        media.sendCode(media.keys(media._MediaKey.next))
    }
    
})
function Custom_Start() {
    
    if (input.buttonIsPressed(Button.AB)) {
        basic.showLeds(`
            . . . # #
                        . . # # #
                        . # # # #
                        . # # . .
                        # . . . .
        `)
        Custom += 1
        Custom2 += 1
    }
    
}

buttonClicks.onButtonDoubleClicked(buttonClicks.AorB.A, function my_function() {
    mouse.click()
    basic.pause(100)
    mouse.click()
})
input.onLogoEvent(TouchButtonEvent.LongPressed, function on_logo_long_pressed() {
    keyboard.sendString("" + keyboard.modifiers(keyboard._Modifier.windows) + "l")
})
input.onButtonPressed(Button.A, function on_button_pressed_a() {
    mouse.click()
})
input.onGesture(Gesture.TiltLeft, function on_gesture_tilt_left() {
    if (pins.digitalReadPin(DigitalPin.P2) == 1) {
        keyboard.sendString("" + keyboard.modifiers(keyboard._Modifier.control) + "-")
    }
    
})
grove.onGesture(GroveGesture.Clockwise, function on_gesture_clockwise() {
    media.sendCode(media.keys(media._MediaKey.mute))
})
grove.onGesture(GroveGesture.Up, function on_gesture_up() {
    media.sendCode(media.keys(media._MediaKey.vol_up))
})
grove.onGesture(GroveGesture.Forward, function on_gesture_forward() {
    media.sendCode(media.keys(media._MediaKey.playPause))
})
grove.onGesture(GroveGesture.Left, function on_gesture_left() {
    if (pins.digitalReadPin(DigitalPin.P1) == 1) {
        keyboard.sendString(keyboard.keys(keyboard._Key.left))
    } else {
        media.sendCode(media.keys(media._MediaKey.previous))
    }
    
})
input.onGesture(Gesture.ScreenDown, function on_gesture_screen_down() {
    if (pins.digitalReadPin(DigitalPin.P2) == 1) {
        keyboard.sendString("" + keyboard.modifiers(keyboard._Modifier.windows) + keyboard.keys(keyboard._Key.tab))
    }
    
})
input.onButtonPressed(Button.B, function on_button_pressed_b() {
    mouse.rightClick()
})
input.onGesture(Gesture.Shake, function on_gesture_shake() {
    if (pins.digitalReadPin(DigitalPin.P1) == 1) {
        keyboard.sendString("" + keyboard.modifiers(keyboard._Modifier.control) + "r")
    }
    
})
grove.onGesture(GroveGesture.Anticlockwise, function on_gesture_anticlockwise() {
    if (pins.digitalReadPin(DigitalPin.P1) == 1) {
        keyboard.sendString(C2)
    } else {
        keyboard.sendString(C1)
    }
    
})
input.onGesture(Gesture.TiltRight, function on_gesture_tilt_right() {
    if (pins.digitalReadPin(DigitalPin.P2) == 1) {
        keyboard.sendString("" + keyboard.modifiers(keyboard._Modifier.control) + "=")
    }
    
})
input.onLogoEvent(TouchButtonEvent.Pressed, function on_logo_pressed() {
    keyboard.sendString(keyboard.keys(keyboard._Key.enter))
})
basic.forever(function on_forever() {
    
    Custom_Start()
    if (Custom == 1 && Custom2 == 1) {
        basic.showNumber(index)
        if (input.isGesture(Gesture.TiltRight) && index < List_length - 1) {
            index += 1
        }
        
        if (input.isGesture(Gesture.TiltLeft) && index > 0) {
            index += -1
        }
        
        if (input.isGesture(Gesture.LogoDown)) {
            C1 = List[index]
            basic.showString("" + C1)
            Custom2 = 0
        }
        
    } else if (Custom == 2 && Custom2 == 1) {
        basic.showNumber(index2)
        if (input.isGesture(Gesture.TiltRight) && index2 < List_length - 1) {
            index2 += 1
        }
        
        if (input.isGesture(Gesture.TiltLeft) && index2 > 0) {
            index2 += -1
        }
        
        if (input.isGesture(Gesture.LogoDown)) {
            C2 = List[index2]
            basic.showString("" + C2)
            Custom2 = 2
        }
        
    }
    
    if (input.isGesture(Gesture.LogoUp) && pins.digitalReadPin(DigitalPin.P2) == 1) {
        mouse.scroll(1)
    }
    
    if (input.isGesture(Gesture.LogoDown) && pins.digitalReadPin(DigitalPin.P2) == 1) {
        mouse.scroll(-1)
    }
    
    if (input.buttonIsPressed(Button.A) && pins.digitalReadPin(DigitalPin.P2) == 1) {
        mouse.click()
    }
    
    if (pins.digitalReadPin(DigitalPin.P1) == 1) {
        if (input.isGesture(Gesture.TiltRight)) {
            mouse.movexy(10, 0)
        }
        
        if (input.isGesture(Gesture.TiltLeft)) {
            mouse.movexy(-10, 0)
        }
        
        if (input.isGesture(Gesture.LogoUp)) {
            mouse.movexy(0, 10)
        }
        
        if (input.isGesture(Gesture.LogoDown)) {
            mouse.movexy(0, -10)
        }
        
    }
    
})
